{"version":3,"file":"commonHelpers.js","sources":["../src/js/constants.js","../src/js/services.js","../src/js/renderCategories.js","../src/js/renderPagination.js","../src/js/renderExercises.js","../src/js/rerender.js","../src/js/eventHandlers.js","../src/js/index.js"],"sourcesContent":["const BASE_URL = 'https://your-energy.b.goit.study/api/';\n\nconst refs = {\n  list: document.querySelector('.js-filtered-list'),\n  filter: document.querySelector('.js-filters'),\n  pagination: document.querySelector('.js-pagination'),\n  exerciseHeader: document.querySelector('.js-exercise-header'),\n};\n\nconst FILTERS = {\n  MUSCLES: 'Muscles',\n  BODY_PARTS: 'Body parts',\n  EQUIPMENT: 'Equipment',\n};\n\nconst queryParamsFilters = new URLSearchParams({\n  filter: FILTERS.MUSCLES,\n  page: 1,\n  limit: window.matchMedia('(min-width: 768px)').matches ? 12 : 9,\n});\n\nconst queryParamsExercises = new URLSearchParams({\n  page: 1,\n  limit: window.matchMedia('(min-width: 768px)').matches ? 10 : 8,\n});\n\nconst dataOptions = {\n  page: 1,\n  totalPages: 0,\n};\n\nexport {\n  BASE_URL,\n  FILTERS,\n  queryParamsFilters,\n  queryParamsExercises,\n  refs,\n  dataOptions,\n};\n","import {\n  BASE_URL,\n  queryParamsFilters,\n  queryParamsExercises,\n} from './constants';\n\nconst requestOptionsGET = {\n  method: 'GET',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\n// Exercises\n\nexport async function serviceGetExercises() {\n  console.log(`${BASE_URL}exercises?${queryParamsExercises}`);\n  const res = await fetch(\n    `${BASE_URL}exercises?${queryParamsExercises}`,\n    requestOptionsGET\n  );\n  if (!res.ok) {\n    throw new Error(`Ooops, status code: ${res.status}`);\n  }\n  return await res.json();\n}\n\n// TODO test\n// serviceGetExercises({ equipment: 'band' });\n\n// NOTE: in case the mail has already did a review it can not be reused\n// you will get error message in response in format: {message: \"Such email already exists\"}\n// it should be handled in the catch() with toast message\nexport async function servicePatchExercisesByIdRating(\n  id,\n  { rate, email, review }\n) {\n  const requestOptionsPatch = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ rate, email, review }),\n  };\n\n  const res = await fetch(\n    `${BASE_URL}exercises/${id}/rating`,\n    requestOptionsPatch\n  );\n  if (!res.ok) {\n    throw new Error(`Ooops, status code: ${res.status}`);\n  }\n  return await res.json();\n}\n\n// TODO test\n// servicePatchRating('64f389465ae26083f39b1a70', {\n//   rate: 5,\n//   email: 'test0000002@gmail.com',\n//   review: 'My best exercise',\n// });\n\nexport async function serviceGetExercisesById(id) {\n  const res = await fetch(`${BASE_URL}exercises/${id}`, requestOptionsGET);\n  if (!res.ok) {\n    throw new Error(`Ooops, status code: ${res.status}`);\n  }\n  return await res.json();\n}\n\n// TODO test\n// serviceGetExercisesById('64f389465ae26083f39b1a70');\n\n// Filters\n\nexport async function serviceGetFilters() {\n  const res = await fetch(\n    `${BASE_URL}filters?${queryParamsFilters}`,\n    requestOptionsGET\n  );\n  if (!res.ok) {\n    throw new Error(`Ooops, status code: ${res.status}`);\n  }\n  return await res.json();\n}\n\n// Quotes\nexport async function serviceGetQuote() {\n  const res = await fetch(`${BASE_URL}quote`, requestOptionsGET);\n  if (!res.ok) {\n    throw new Error(`Ooops, status code: ${res.status}`);\n  }\n  return await res.json();\n}\n\n// TODO test\n// serviceGetQuote();\n\n// Subscriptions\nexport async function servicePostSubscription(email) {\n  const requestOptionsPost = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email }),\n  };\n\n  const res = await fetch(`${BASE_URL}subscription`, requestOptionsPost);\n  if (!res.ok) {\n    throw new Error(`Ooops, status code: ${res.status}`);\n  }\n  return await res.json();\n}\n\n// TODO test\n// servicePostSubscription('test0000002@gmail.com');\n","import { refs } from './constants';\n\nexport function renderCategories(arr) {\n  const markup = arr\n    .map(\n      ({ filter, name, imgURL }) =>\n        `<li class=\"filtered-item\" data-filter=\"${filter}\" data-name=\"${name}\">\n          <a href=\"#\" class=\"filtered-link\" >\n            <img\n              src=\"${imgURL}\"\n              alt=\"${name}\"\n              class=\"filter-img\"\n              width=\"80\"\n              height=\"80\"\n            />\n            <h3 class=\"filtered-title\">${filter}</h3>\n            <p class=\"filtered-text\">${name}</p>\n          </a>\n        </li>`\n    )\n    .join('');\n\n  refs.list.innerHTML = markup;\n}\n","import { refs } from './constants';\n\nexport function renderPagination(totalPages) {\n  let markup = '';\n  for (let i = 1; i <= totalPages; i++) {\n    markup += `<li class=\"pagination-item\" data-id=\"${i}\"><a href=\"#\" class=\"pagination-link\">${i}</a></li>`;\n  }\n  refs.pagination.innerHTML = markup;\n}\n","import { refs } from './constants';\n\nexport function renderExercises(arr) {\n  const markup = arr\n    .map(\n      ({ name, rating, bodyPart, burnedCalories, target }) =>\n        `<li class=\"exercise-card\" >\n          <h3 class=\"exercise-general-header\">Workout</h3>\n          <p class=\"exercise-rating\">${rating} \n            <svg>\n              <use href=\"./images/icons.svg#icon-star\"></use>\n            </svg>\n          </p> \n          <button class=\"exercise-start-btn\" type=\"button\">\n            start\n            <svg>\n              <use href=\"./images/icons.svg#icon-start-arrow\"></use>\n            </svg>\n          </button>\n          <h2 class=\"exercise-name\">${name}</h2>\n          <p class=\"exercise-text\">Burned calories: ${burnedCalories}</p>\n          <p class=\"exercise-text\">Body part: ${bodyPart}</p>\n          <p class=\"exercise-text\">Target: ${target}</p>\n        </li>`\n    )\n    .join('');\n\n  refs.list.innerHTML = markup;\n}\n","import { refs, dataOptions } from './constants';\nimport { serviceGetExercises, serviceGetFilters } from './services';\nimport { renderCategories } from './renderCategories';\nimport { renderPagination } from './renderPagination';\nimport { renderExercises } from './renderExercises';\n\nfunction rerender() {\n  serviceGetFilters()\n    .then(data => {\n      dataOptions.totalPages = data.totalPages;\n      renderCategories(data.results);\n      renderPagination(data.totalPages);\n\n      Array.from(refs.pagination.childNodes).forEach(p => {\n        p.classList.remove('active');\n      });\n\n      const activePage = Array.from(refs.pagination.childNodes).find(\n        p => p.dataset.id == data.page\n      );\n      if (activePage) {\n        activePage.classList.add('active');\n      }\n    })\n    .catch(error => {\n      console.log(error); // TODO toast error message?\n    });\n}\n\nfunction rerenderExercises(params) {\n  serviceGetExercises(params)\n    .then(data => {\n      renderExercises(data.results);\n      renderPagination(data.totalPages);\n\n      Array.from(refs.pagination.childNodes).forEach(p => {\n        p.classList.remove('active');\n      });\n\n      const activePage = Array.from(refs.pagination.childNodes).find(\n        p => p.dataset.id == data.page\n      );\n      if (activePage) {\n        activePage.classList.add('active');\n      }\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nexport { rerender, rerenderExercises };\n","import {\n  queryParamsFilters,\n  queryParamsExercises,\n  FILTERS,\n  refs,\n} from './constants';\nimport { rerender, rerenderExercises } from './rerender';\n\nfunction onPaginationClick(e) {\n  const target = e.target;\n  const paginationItem = target.closest('li.pagination-item');\n\n  if (!paginationItem) return;\n\n  const page = Number(paginationItem.dataset.id);\n  queryParamsFilters.set('page', page);\n  queryParamsExercises.set('page', page);\n\n  if (refs.exerciseHeader.dataset.exercise) {\n    rerenderExercises(queryParamsExercises);\n  } else {\n    rerender();\n  }\n}\n\nfunction onFilterClick(e) {\n  const target = e.target;\n  const listItem = target.closest('li[data-filter]');\n\n  if (!listItem) return;\n\n  const activeItems = document.querySelectorAll('.js-filters .active');\n  activeItems.forEach(item => item.classList.remove('active'));\n\n  listItem.classList.add('active');\n\n  const filter = listItem.dataset.filter;\n  const filterKey = Object.keys(FILTERS).find(key => FILTERS[key] === filter);\n\n  if (filterKey) {\n    queryParamsFilters.set('filter', FILTERS[filterKey]);\n    queryParamsFilters.set('page', 1);\n\n    queryParamsExercises.delete('muscles');\n    queryParamsExercises.delete('bodypart');\n    queryParamsExercises.delete('equipment');\n    queryParamsExercises.set('page', 1);\n\n    rerender();\n  }\n  resetExerciseHeader();\n}\n\nfunction onExerciseClick(e) {\n  const target = e.target;\n  const exerciseItem = target.closest('li.filtered-item');\n  if (!exerciseItem) return;\n  let exerciseFilter = exerciseItem.dataset.filter.toString().toLowerCase();\n  if (exerciseFilter === 'body parts') {\n    exerciseFilter = 'bodypart';\n  }\n  const exerciseName = exerciseItem.dataset.name;\n\n  setExerciseHeader(exerciseName);\n\n  queryParamsExercises.set(exerciseFilter, exerciseName);\n  queryParamsExercises.set('page', 1);\n\n  rerenderExercises(queryParamsExercises);\n}\n\nfunction setExerciseHeader(name) {\n  refs.exerciseHeader.textContent = ` / ${name}`;\n  refs.exerciseHeader.dataset.exercise = name;\n}\n\nfunction resetExerciseHeader() {\n  refs.exerciseHeader.textContent = '';\n  refs.exerciseHeader.dataset.exercise = '';\n}\n\nexport { onPaginationClick, onFilterClick, onExerciseClick };\n","import { queryParamsFilters, queryParamsExercises, refs } from './constants';\nimport { rerender } from './rerender';\nimport {\n  onFilterClick,\n  onPaginationClick,\n  onExerciseClick,\n} from './eventHandlers';\nimport './search-input';\n\nwindow.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n  if (e.matches) {\n    queryParamsFilters.set('limit', 12);\n    queryParamsExercises.set('limit', 10);\n  } else {\n    queryParamsFilters.set('limit', 9);\n    queryParamsExercises.set('limit', 8);\n  }\n\n  queryParamsFilters.set('page', 1);\n  queryParamsExercises.set('page', 1);\n\n  rerender();\n});\n\nrerender();\n\nrefs.filter.addEventListener('click', onFilterClick);\nrefs.pagination.addEventListener('click', onPaginationClick);\nrefs.list.addEventListener('click', onExerciseClick);\n"],"names":["BASE_URL","refs","FILTERS","queryParamsFilters","queryParamsExercises","requestOptionsGET","serviceGetExercises","res","serviceGetFilters","renderCategories","arr","markup","filter","name","imgURL","renderPagination","totalPages","i","renderExercises","rating","bodyPart","burnedCalories","target","rerender","data","p","activePage","error","rerenderExercises","params","onPaginationClick","paginationItem","page","onFilterClick","listItem","item","filterKey","key","resetExerciseHeader","onExerciseClick","exerciseItem","exerciseFilter","exerciseName","setExerciseHeader"],"mappings":"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"}